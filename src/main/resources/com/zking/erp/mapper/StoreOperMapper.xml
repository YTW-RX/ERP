<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.erp.mapper.StoreOperMapper" >
  <resultMap id="BaseResultMap" type="com.zking.erp.model.StoreOper" >
    <constructor >
      <idArg column="storeoperId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="eId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sOperTime" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="storeId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="gId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sNum" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="storeoperType" jdbcType="BIT" javaType="java.lang.Boolean" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    storeoperId, eId, sOperTime, storeId, gId, sNum, storeoperType
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from storeoper
    where storeoperId = #{storeoperid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from storeoper
    where storeoperId = #{storeoperid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zking.erp.model.StoreOper" >
    insert into storeoper (storeoperId, eId, sOperTime, 
      storeId, gId, sNum, 
      storeoperType)
    values (#{storeoperid,jdbcType=INTEGER}, #{eid,jdbcType=INTEGER}, #{sopertime,jdbcType=DATE}, 
      #{storeid,jdbcType=INTEGER}, #{gid,jdbcType=INTEGER}, #{snum,jdbcType=INTEGER}, 
      #{storeopertype,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.zking.erp.model.StoreOper" >
    insert into storeoper
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storeoperid != null" >
        storeoperId,
      </if>
      <if test="eid != null" >
        eId,
      </if>
      <if test="sopertime != null" >
        sOperTime,
      </if>
      <if test="storeid != null" >
        storeId,
      </if>
      <if test="gid != null" >
        gId,
      </if>
      <if test="snum != null" >
        sNum,
      </if>
      <if test="storeopertype != null" >
        storeoperType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storeoperid != null" >
        #{storeoperid,jdbcType=INTEGER},
      </if>
      <if test="eid != null" >
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="sopertime != null" >
        #{sopertime,jdbcType=DATE},
      </if>
      <if test="storeid != null" >
        #{storeid,jdbcType=INTEGER},
      </if>
      <if test="gid != null" >
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="snum != null" >
        #{snum,jdbcType=INTEGER},
      </if>
      <if test="storeopertype != null" >
        #{storeopertype,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.erp.model.StoreOper" >
    update storeoper
    <set >
      <if test="eid != null" >
        eId = #{eid,jdbcType=INTEGER},
      </if>
      <if test="sopertime != null" >
        sOperTime = #{sopertime,jdbcType=DATE},
      </if>
      <if test="storeid != null" >
        storeId = #{storeid,jdbcType=INTEGER},
      </if>
      <if test="gid != null" >
        gId = #{gid,jdbcType=INTEGER},
      </if>
      <if test="snum != null" >
        sNum = #{snum,jdbcType=INTEGER},
      </if>
      <if test="storeopertype != null" >
        storeoperType = #{storeopertype,jdbcType=BIT},
      </if>
    </set>
    where storeoperId = #{storeoperid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.erp.model.StoreOper" >
    update storeoper
    set eId = #{eid,jdbcType=INTEGER},
      sOperTime = #{sopertime,jdbcType=DATE},
      storeId = #{storeid,jdbcType=INTEGER},
      gId = #{gid,jdbcType=INTEGER},
      sNum = #{snum,jdbcType=INTEGER},
      storeoperType = #{storeopertype,jdbcType=BIT}
    where storeoperId = #{storeoperid,jdbcType=INTEGER}
  </update>
</mapper>